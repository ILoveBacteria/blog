<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Java on معین بلاگ</title><link>https://blog.moeinarabi.ir/tags/java/</link><description>Recent content in Java on معین بلاگ</description><generator>Hugo -- gohugo.io</generator><language>fa</language><lastBuildDate>Tue, 01 Mar 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.moeinarabi.ir/tags/java/index.xml" rel="self" type="application/rss+xml"/><item><title>ساختن و اجرا کردن فایل jar در زبان جاوا</title><link>https://blog.moeinarabi.ir/p/jar-file/</link><pubDate>Tue, 01 Mar 2022 00:00:00 +0000</pubDate><guid>https://blog.moeinarabi.ir/p/jar-file/</guid><description>&lt;img src="https://blog.moeinarabi.ir/p/jar-file/cover.webp" alt="Featured image of post ساختن و اجرا کردن فایل jar در زبان جاوا" />&lt;h2 id="مقدمه">مقدمه
&lt;/h2>&lt;p>فرض کنید به عنوان یک توسعه‌دهنده می‌خواهید پروژه خودتون رو برای استفاده کاربر منتشر کنید. آیا پروژتون رو با ده‌ها یا صدها کلاس نوشته شده در فولدرهای مختلف در اختیار کاربر قرار می‌دید؟ نه! اینجاست که باید با &lt;code>jar&lt;/code> آشنا بشید.
فایل &lt;code>jar&lt;/code> یک فایل فشرده‌شده است که کلاس‌های جاوا، عکس، متن و&amp;hellip; به همراه فایل &lt;em>Manifest&lt;/em>(در ادامه بهش می‌رسیم) را در خود جای می‌دهد و از فرمت‌های فشرده‌سازی مانند &lt;code>zip&lt;/code> استفاده می‌کند.&lt;/p>
&lt;h2 id="ساختن-فایل-jar">ساختن فایل &lt;code>jar&lt;/code>
&lt;/h2>&lt;p>برای شروع اول مطمئن بشید که &lt;code>JDK&lt;/code> روی سیستمتون نصب است. از این &lt;a class="link" href="https://l.vrgl.ir/r?ad=1&amp;amp;l=https%3A%2F%2Fwww.oracle.com%2Fjava%2Ftechnologies%2Fdownloads%2F&amp;amp;si=dawcnbxn3zqy&amp;amp;st=post&amp;amp;u=jydctt1aaupa&amp;amp;k=zEhPRO4HIYSTabDANP4zEr7E9E4aFaYnCnHop7PF99I%3D" target="_blank" rel="noopener"
>لینک&lt;/a> می‌تونید نسخه مورد نظرتون رو دانلود کنید.
برای ساخت فایل &lt;code>jar&lt;/code> کافیست به فولدری که فایل‌ها و کلاس‌ها قرار گرفته‌اند برویم و با دستور زیر در محیط ترمینال فایل &lt;code>jar&lt;/code> ساخته می‌شود:&lt;/p>
&lt;p>Syntax:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">jar -cf jarfilename inputfiles
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>&lt;code>jarfilename&lt;/code>: نام فایل خروجی&lt;/li>
&lt;li>&lt;code>inputfiles&lt;/code>: نام فایل‌هایی است که قرار است فشرده شوند&lt;/li>
&lt;li>&lt;code>-c&lt;/code>: یک فایل آرشیو خالی و جدید می‌سازد&lt;/li>
&lt;li>&lt;code>-f&lt;/code>: مشخص می‌کند پس از آن، نام فایل خروجی به عنوان پارامتر دریافت شود&lt;/li>
&lt;/ul>
&lt;h2 id="مثال-از-ساخت-فایل-jar">مثال از ساخت فایل &lt;code>jar&lt;/code>
&lt;/h2>&lt;p>&lt;img src="https://blog.moeinarabi.ir/p/jar-file/command.webp"
width="792"
height="492"
srcset="https://blog.moeinarabi.ir/p/jar-file/command_huc7f5d17614156dbe7d8504860574f6cd_22414_480x0_resize_q75_h2_box_2.webp 480w, https://blog.moeinarabi.ir/p/jar-file/command_huc7f5d17614156dbe7d8504860574f6cd_22414_1024x0_resize_q75_h2_box_2.webp 1024w"
loading="lazy"
alt="نمونه‌ای از اجرا کردن دستور jar"
class="gallery-image"
data-flex-grow="160"
data-flex-basis="386px"
>&lt;/p>
&lt;p>در اینجا ما با دو فایل &lt;code>JavaClass1.class&lt;/code> و &lt;code>JavaClass2.class&lt;/code> روبه‌رو هستیم و با دستور زیر یک فایل &lt;code>jar&lt;/code> ساخته شده:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">jar -cvf export.jar *.class
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>استفاده از &lt;code>v-&lt;/code> فرایند فشرده‌سازی را در خروجی نمایش می‌دهد.
اگر تعداد زیادی فایل کلاس را می‌خواهید در فایل &lt;code>jar&lt;/code> قرار دهید می‌توانید از &lt;code>class.*&lt;/code> استفاده کنید به جای اینکه تک تک نام فایل‌ها را بنویسید.&lt;/p>
&lt;h2 id="مشاهده-محتوای-فایل-jar">مشاهده محتوای فایل &lt;code>jar&lt;/code>
&lt;/h2>&lt;p>پس از آنکه یک فایل &lt;code>jar&lt;/code> بدست آمد، برای دیدن فایل‌های موجود در آن از دستور زیر استفاده می‌شود:&lt;/p>
&lt;p>Syntax:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">jar -tf jarfilename
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Example:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">jar -tf export.jar
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>خروجی:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">META-INF/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">META-INF/MANIFEST.MF
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">JavaClass1.class
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">JavaClass2.class
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>یک فایل &lt;code>jar&lt;/code> به طور پیش فرض دارای فایل Manifest می‌باشد و همیشه در فولدر &lt;code>META-INF&lt;/code> قرار دارد.&lt;/p>
&lt;h2 id="استخراج-کردن-فایل-jar">استخراج کردن فایل &lt;code>jar&lt;/code>
&lt;/h2>&lt;p>برای extract کردن از دستور زیر استفاده می‌شود:&lt;/p>
&lt;p>Syntax:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">jar -xf jarfilename
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Example:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">jar -xf export.jar
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>برای extract کردن حتی می‌توان از ابزارهایی که یک فایل &lt;code>zip&lt;/code> را extract می‌کنند، استفاده کرد.&lt;/p>
&lt;h2 id="آپدیت-کردن-فایل-jar">آپدیت کردن فایل &lt;code>jar&lt;/code>
&lt;/h2>&lt;p>اگر پروژه‌ی ما یک پروژه‌ی حجیم و بزرگی باشد، پس از تغییراتی که در پروژه اعمال می‌کنیم، برای تبدیل آن به فایل جدید &lt;code>jar&lt;/code> زمان طولانی‌ صرف می‌شود. در اینجا بهتر است به جای ساختن یک فایل جدید &lt;code>jar&lt;/code>، فایل قبلی را آپدیت بکنیم.
برای آپدیت کردن محتوای فایل از دستور زیر استفاده می‌کنیم:&lt;/p>
&lt;p>Syntax:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">jar -uf jar-file input-file&lt;span class="o">(&lt;/span>s&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Example:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">java -uf export.jar *.class
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>بعد از نوشتن نام فایل &lt;code>jar&lt;/code> مورد نظر، فایل‌ها و کلاس‌هایی را که می‌خواهیم آپدیت بکنیم می‌نویسیم. این امکان باعث می‌شود تا به جای اینکه دوباره تمام فایل‌ها را فشرده بکنیم، فقط فایل‌هایی که تغییرات داشتنند را جایگزین فایل‌های قبلی در &lt;code>jar&lt;/code> بکنیم.&lt;/p>
&lt;h2 id="قابلیت-اجرا-شدن-فایل-jar">قابلیت اجرا شدن فایل &lt;code>jar&lt;/code>
&lt;/h2>&lt;p>پیش از آنکه یاد بگیریم چگونه یک فایل &lt;code>jar&lt;/code> را اجرا کنیم، باید آن را برای اجرا شدن آماده‌سازی کنیم.
فرض می‌کنیم در پروژه، کلاسی با نام &lt;code>Main.class&lt;/code> ساخته‌ایم و در آن متد &lt;code>main&lt;/code> را پیاده‌سازی کرده‌ایم. اکنون باید به فایل &lt;code>jar&lt;/code> بفهمانیم که متد &lt;code>main&lt;/code> در چه کلاسی قرار دارد تا هنگام اجرا شدن &lt;code>jar&lt;/code>، آن را اجرا کند. با استفاده از دستور زیر هنگام ساخت فایل &lt;code>jar&lt;/code> این امکان را اضافه می‌کنیم:&lt;/p>
&lt;p>Syntax:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">jar -cfe jarfilename mainclass import-files
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Example:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">jar -cfe export.jar Main client.class server.class logo.jpeg
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>توجه کنید که کلاس &lt;code>Main&lt;/code> بدون &lt;code>class&lt;/code>. نوشته می‌شود.
روش دیگری هم برای اضافه کردن &lt;code>Main&lt;/code> وجود دارد که در ادامه در مبحت Manifest به آن می‌رسیم.&lt;/p>
&lt;p>اکنون می‌توان فایل &lt;code>jar&lt;/code> خود را با دستور زیر اجرا کرد:&lt;/p>
&lt;p>Syntax:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">java -jar jarfilename
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Example:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">java -jar export.jar
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="فایل-manifest">فایل Manifest
&lt;/h2>&lt;p>زمانی که یک فایل &lt;code>jar&lt;/code> ساخته می‌شود به صورت اتوماتیک در آن فایل Manifast هم ساخته می‌شود. حالا اصلا Manifast چی است؟&lt;/p>
&lt;p>&lt;img src="https://blog.moeinarabi.ir/p/jar-file/manifest2.webp"
width="406"
height="132"
srcset="https://blog.moeinarabi.ir/p/jar-file/manifest2_hu998a0a3c6585db5745b30018c6242c98_6356_480x0_resize_q75_h2_box_2.webp 480w, https://blog.moeinarabi.ir/p/jar-file/manifest2_hu998a0a3c6585db5745b30018c6242c98_6356_1024x0_resize_q75_h2_box_2.webp 1024w"
loading="lazy"
alt="نمونه‌ای از فایل Manifest"
class="gallery-image"
data-flex-grow="307"
data-flex-basis="738px"
>&lt;/p>
&lt;p>هر فایل &lt;code>jar&lt;/code> یک فایل Manifest دارد که جزئیات و اطلاعات آن در Manifest نوشته شده است. نام این فایل به صورت پیش فرض &lt;code>MANIFEST.MF&lt;/code> نام‌گذاری شده و در فولدر &lt;code>META-INF&lt;/code> قرار دارد. در تصویر بالا نمونه‌ای از این فایل آمده‌است؛ حتی می‌تواند شامل جزئیات بیشتری باشد.
ورودی فایل Manifest از دو قسمت تشکیل شده است، نام و مقدار. نوشتن نام و مقدارهای Manifest چند نکته دارد که به آن می‌پردازیم:
باید یک اسپیس پس از &lt;code>&amp;quot;:&amp;quot;&lt;/code> و قبل از مقدار باشد.
بعد از آخرین خط، یک خط باید خالی باشد.
متن باید از انکودر UTF-8 استفاده کند.
وقتی کلاس &lt;code>main&lt;/code> را مشخص می‌کنیم نباید پسوند &lt;code>class.&lt;/code> را پس از آن بنویسیم.&lt;/p>
&lt;h2 id="آپدیت-کردن-فایل-manifest">آپدیت کردن فایل Manifest
&lt;/h2>&lt;p>&lt;img src="https://blog.moeinarabi.ir/p/jar-file/manifest.png"
width="419"
height="151"
srcset="https://blog.moeinarabi.ir/p/jar-file/manifest_hu492df2e3b1d191d558e7c8fd8b39b88c_6973_480x0_resize_box_3.png 480w, https://blog.moeinarabi.ir/p/jar-file/manifest_hu492df2e3b1d191d558e7c8fd8b39b88c_6973_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="نمونه‌ای از فایل تکست که برای آپدیت کردن Manifest نوشته شده"
class="gallery-image"
data-flex-grow="277"
data-flex-basis="665px"
>&lt;/p>
&lt;p>اگر فایل &lt;code>jar&lt;/code> را ساخته‌ایم و می‌خواهیم تغییراتی روی فایل Manifest بدهیم؛ ابتدا یک فایل &lt;code>txt.&lt;/code> می‌سازیم و سپس برای اعمال تغییرات از دستور زیر استفاده می‌کنیم:&lt;/p>
&lt;p>Example:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">jar -ufm export.jar manifest.txt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>شناساندن کلاس &lt;code>main&lt;/code> از طریق Manifest
در قسمت‌های بالاتر توضیح داده شد که چگونه هنگام ساخت یک فایل &lt;code>jar&lt;/code>، کلاس &lt;code>main&lt;/code> را برای اجرا شدن به آن اضافه کنیم. حال اگر فایل &lt;code>jar&lt;/code> را قبلا ساخته باشیم و کلاس &lt;code>main&lt;/code> را به آن اضافه نکرده باشیم، کافیست خط زیر را به فایل Manifest اضافه کنیم:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-txt" data-lang="txt">&lt;span class="line">&lt;span class="cl">Main-Class: Main
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>حتما دقت کنید که &lt;code>class.&lt;/code> پس از آن را نباید بنویسیم.&lt;/p>
&lt;h2 id="استفاده-از-ide">استفاده از IDE
&lt;/h2>&lt;p>تا به این جا با &lt;code>jar&lt;/code> و با انواع دستورهاش آشنا شدیم. اگر پروژه‌ی ما از کتابخانه‌های خارجی استفاده می‌کرد، قرار دادن این کتابخانه‌ها در فایل &lt;code>jar&lt;/code> کمی پیچیده می‌شد. محیط‌های توسعه قابلیت‌های پیشرفته‌ای در اختیارمان قرار می‌دهند که کار را برای ما ساده‌تر می‌کنند. در این قسمت ساختن یک فایل &lt;code>jar&lt;/code> را در IntelliJ بررسی می‌کنیم.&lt;/p>
&lt;p>&lt;img src="https://blog.moeinarabi.ir/p/jar-file/ide.gif"
width="1637"
height="938"
srcset="https://blog.moeinarabi.ir/p/jar-file/ide_hu67a6eedb80d30d39f415274587c8f908_2357661_480x0_resize_box_1.gif 480w, https://blog.moeinarabi.ir/p/jar-file/ide_hu67a6eedb80d30d39f415274587c8f908_2357661_1024x0_resize_box_1.gif 1024w"
loading="lazy"
alt="فرایند ساخت فایل jar"
class="gallery-image"
data-flex-grow="174"
data-flex-basis="418px"
>&lt;/p>
&lt;p>ابتدا از نوار بالا گزینه File را انتخاب می‌کنیم و به قسمت Artifacts می‌رویم.
روی علامت + و سپس روی &lt;code>jar&lt;/code> کلیک می‌کنیم. گزینه‌ی From modules with dependencies انتخاب می‌کنیم.
در فیلدهای پیش رو می‌توان کلاس Main را انتخاب کرد.
در انتها روی OK کلیک می‌کنیم.
در صفحه اصلی نرم‌افزار از نوار بالا روی Build و سپس Build Artifacts کلیک می‌کنیم.
فایل &lt;code>jar&lt;/code> مورد نظر را انتخاب کنید تا فرایند ساخت فایل &lt;code>jar&lt;/code> آغاز شود.
فایل‌های &lt;code>jar&lt;/code> به طور پیش فرض در مسیر &lt;code>out/artifacts&lt;/code> قرار می‌گیرد.&lt;/p>
&lt;h2 id="منابع">منابع
&lt;/h2>&lt;ul>
&lt;li>&lt;a class="link" href="https://l.vrgl.ir/r?ad=1&amp;amp;l=https%3A%2F%2Fwww.geeksforgeeks.org%2Fworking-with-jar-and-manifest-files-in-java%2F%3Fref%3Dlbp&amp;amp;si=dawcnbxn3zqy&amp;amp;st=post&amp;amp;u=jydctt1aaupa&amp;amp;k=lV3wdmWItJOUS2ZTmu7Mbxi8q768VwYXma3oyBk7%2BvA%3D" target="_blank" rel="noopener"
>Working with JAR and Manifest files In Java - GeeksforGeeks&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://l.vrgl.ir/r?ad=1&amp;amp;l=https%3A%2F%2Fwww.geeksforgeeks.org%2Fjar-files-java%2F&amp;amp;si=dawcnbxn3zqy&amp;amp;st=post&amp;amp;u=jydctt1aaupa&amp;amp;k=nSUeolF%2BPh3%2BSMBYf8yiWt92qVhKIH%2Fe8smJT3OnP4k%3D" target="_blank" rel="noopener"
>Jar files in Java - GeeksforGeeks&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://l.vrgl.ir/r?ad=1&amp;amp;l=https%3A%2F%2Fwww.jetbrains.com%2Fhelp%2Fidea%2Fcompiling-applications.html%23package_into_jar&amp;amp;si=dawcnbxn3zqy&amp;amp;st=post&amp;amp;u=jydctt1aaupa&amp;amp;k=ZM3j83yE%2BxkZI%2FTeWl7DsxIk6JrE5v30ukuxTOz5PpE%3D" target="_blank" rel="noopener"
>Compile and build applications with IntelliJ IDEA | IntelliJ IDEA&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://l.vrgl.ir/r?ad=1&amp;amp;l=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FJAR_%28file_format%29&amp;amp;si=dawcnbxn3zqy&amp;amp;st=post&amp;amp;u=jydctt1aaupa&amp;amp;k=8feSlLXxMomzn5C13zX8DH%2FpN25TZ3dPhrHW%2FuF%2BM04%3D" target="_blank" rel="noopener"
>JAR (file format) - Wikipedia&lt;/a>&lt;/li>
&lt;/ul></description></item></channel></rss>